{
	"info": {
		"_postman_id": "90bb0476-22e3-0b8c-18a8-2ba10097ba9d",
		"name": "My-App-Interface-HTTP-AS3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create-Service-HTTP",
			"description": "this folder will create a HTTP service automatically via the custom application interface",
			"item": [
				{
					"name": "Request a Token from iWorkflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691c9fbd-76a2-4c52-afc3-ac47bfee4244",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"",
									"tests[\"response has token: \" +respData.token.token] = respData.token.token;",
									"",
									"postman.setEnvironmentVariable('as3_token',respData.token.token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": {{as3_username}},\n  \"password\": {{as3_password}},\n  \"loginProvidername\": \"tmos\"\n}"
						},
						"url": {
							"raw": "https://{{as3_mgmt}}/mgmt/shared/authn/login",
							"protocol": "https",
							"host": [
								"{{as3_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authn",
								"login"
							]
						},
						"description": "Using Basic Auth, request a token from the iWorkflow platform."
					},
					"response": []
				},
				{
					"name": "Increase Auth Token Timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"tests[\"Auth Token timeout is: \" +respData.timeout] = respData.timeout;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{as3_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeout\":\"36000\"\n}"
						},
						"url": {
							"raw": "https://{{as3_mgmt}}/mgmt/shared/authz/tokens/{{as3_token}}",
							"protocol": "https",
							"host": [
								"{{as3_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authz",
								"tokens",
								"{{as3_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create HTTP Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{as3_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{my-app-name}}\",\n  \"clustername\": \"{{connector-name}}\",\n  \"service-ip\": \"{{service-ip}}\",\n  \"tenant\" : \"{{tenant-name}}\",\n  \"app-data\": {\n\t\"monitors\": [\n    \t\"http\"\n    ],\n    \"members\": [\n    \t{\n        \t\"servicePort\": \"{{service-port}}\",\n        \t\"serverAddresses\": [\n            \t\"{{server1-addr}}\",\n            \t\"{{server2-addr}}\"\n            ]\n        }\n    ]\n  }\n}"
						},
						"url": {
							"raw": "https://{{as3_mgmt}}/mgmt/shared/workers/my-service-catalog/f5-service-http",
							"protocol": "https",
							"host": [
								"{{as3_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"workers",
								"my-service-catalog",
								"f5-service-http"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HTTP Service ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{my-app-name}}\",\n  \"template\" : \"f5-http-lb\",\n  \"vars\": [\n                {\n                    \"name\": \"pool__port\",\n                    \"value\": \"{{service-port}}\"\n                }\n    ],\n    \"tables\": [{\n        \"name\": \"pool__Members\",\n        \"columns\": [\n            \"IPAddress\",\n            \"State\"\n        ],\n        \"rows\": [\n          [ \n            \"{{server1-addr}}\",\n            \"enabled\"\n          ], [\n            \"{{server2-addr}}\",\n            \"enabled\"\n          ]\n        ]\n    }]\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/workers/my-app-interface/{{my-app-name}}",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"workers",
								"my-app-interface",
								"{{my-app-name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update-Service-HTTP - NOT DONE",
			"description": "this folder will update a HTTP service automatically via the custom application interface",
			"item": [
				{
					"name": "Request a Token from iWorkflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"",
									"tests[\"response has token: \" +respData.token.token] = respData.token.token;",
									"",
									"postman.setEnvironmentVariable('iwf_token',respData.token.token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": {{iwf_username}},\n  \"password\": {{iwf_password}},\n  \"loginProvidername\": \"tmos\"\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/authn/login",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authn",
								"login"
							]
						},
						"description": "Using Basic Auth, request a token from the iWorkflow platform."
					},
					"response": []
				},
				{
					"name": "Increase Auth Token Timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"tests[\"Auth Token timeout is: \" +respData.timeout] = respData.timeout;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeout\":\"36000\"\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/authz/tokens/{{iwf_token}}",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authz",
								"tokens",
								"{{iwf_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update HTTP Service - disable a server",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{my-app-name}}\",\n  \"service-ip\": \"{{service-ip}}\",\n  \"clustername\": \"{{connector-name}}\",\n  \"template\" : \"f5-http-lb\",\n  \"app-data\": [\n                {\n                    \"name\": \"pool__port\",\n                    \"value\": \"{{service-port}}\"\n                }\n    ],\n    \"servers-data\": [{\n        \"name\": \"pool__Members\",\n        \"columns\": [\n            \"IPAddress\",\n            \"State\"\n        ],\n        \"rows\": [\n          [ \n            \"{{server1-addr}}\",\n            \"disabled\"\n          ], [\n            \"{{server2-addr}}\",\n            \"enabled\"\n          ]\n        ]\n    }]\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/workers/my-app-interface",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"workers",
								"my-app-interface"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HTTP Service ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{my-app-name}}\",\n  \"template\" : \"f5-http-lb\",\n  \"vars\": [\n                {\n                    \"name\": \"pool__port\",\n                    \"value\": \"{{service-port}}\"\n                }\n    ],\n    \"tables\": [{\n        \"name\": \"pool__Members\",\n        \"columns\": [\n            \"IPAddress\",\n            \"State\"\n        ],\n        \"rows\": [\n          [ \n            \"{{server1-addr}}\",\n            \"enabled\"\n          ], [\n            \"{{server2-addr}}\",\n            \"enabled\"\n          ]\n        ]\n    }]\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/my-app-interface/{{my-app-name}}",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"my-app-interface",
								"{{my-app-name}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "985526df-a4a2-4c06-9576-0540a2d4fb2d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ac1de2e8-1a0d-45e3-9c77-ae8056a4ef9b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Delete-Service - NOT DONE",
			"description": null,
			"item": [
				{
					"name": "Request a Token from iWorkflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"",
									"tests[\"response has token: \" +respData.token.token] = respData.token.token;",
									"",
									"postman.setEnvironmentVariable('iwf_token',respData.token.token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": {{iwf_username}},\n  \"password\": {{iwf_password}},\n  \"loginProvidername\": \"tmos\"\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/authn/login",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authn",
								"login"
							]
						},
						"description": "Using Basic Auth, request a token from the iWorkflow platform."
					},
					"response": []
				},
				{
					"name": "Increase Auth Token Timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"tests[\"Auth Token timeout is: \" +respData.timeout] = respData.timeout;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeout\":\"36000\"\n}"
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/authz/tokens/{{iwf_token}}",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authz",
								"tokens",
								"{{iwf_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{iwf_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{iwf_mgmt}}/mgmt/shared/workers/my-app-interface/{{my-app-name}}",
							"protocol": "https",
							"host": [
								"{{iwf_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"workers",
								"my-app-interface",
								"{{my-app-name}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c6b54f84-54d5-4b00-9021-3be89d4f919f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5965f25e-72e5-4ea9-acc6-8c6a1938a91b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test-Interface",
			"description": null,
			"item": [
				{
					"name": "Request a Token ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dfcc7981-3eb0-4494-9aff-1a894ef136cd",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"",
									"tests[\"response has token: \" +respData.token.token] = respData.token.token;",
									"",
									"postman.setEnvironmentVariable('as3_token',respData.token.token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": {{as3_username}},\n  \"password\": {{as3_password}},\n  \"loginProvidername\": \"tmos\"\n}"
						},
						"url": {
							"raw": "https://{{as3_mgmt}}/mgmt/shared/authn/login",
							"protocol": "https",
							"host": [
								"{{as3_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authn",
								"login"
							]
						},
						"description": "Using Basic Auth, request a token "
					},
					"response": []
				},
				{
					"name": "Increase Auth Token Timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var respData = JSON.parse(responseBody);",
									"tests[\"Auth Token timeout is: \" +respData.timeout] = respData.timeout;",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{as3_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeout\":\"36000\"\n}"
						},
						"url": {
							"raw": "https://{{as3_mgmt}}/mgmt/shared/authz/tokens/{{as3_token}}",
							"protocol": "https",
							"host": [
								"{{as3_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authz",
								"tokens",
								"{{as3_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test interface /example",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{as3_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\" : \"{{my-app-name}}\"\n}"
						},
						"url": {
							"raw": "https://{{as3_mgmt}}/mgmt/shared/workers/my-service-catalog/f5-service-http/example",
							"protocol": "https",
							"host": [
								"{{as3_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"workers",
								"my-service-catalog",
								"f5-service-http",
								"example"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a15c5572-7ade-4661-8881-68d2677d71e2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "91eaa51e-2faa-442c-8ba5-5ab9e3151ac3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}